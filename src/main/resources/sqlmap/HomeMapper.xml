<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.class4.home.mapper.HomeMapper">
	
	<!-- 최신작 가져오기 -->
	<select id="getRecentlyList" resultType="MovieInfoVO">
		SELECT * 
		FROM (SELECT a.*, ROWNUM AS rn
		      FROM (SELECT *
		            FROM movie
		            <![CDATA[
		            WHERE openDt < SYSDATE
		            ]]>
		            ORDER BY openDt DESC) a)
		<![CDATA[
		WHERE rn <= #{movieMaxCnt}
		]]>
	</select>
	
	<!-- 개봉예정작 가져오기 -->
	<select id="getCommingSoonList" resultType="movieInfoVO">
		SELECT *
		FROM (SELECT a.*, ROWNUM AS rn
			  FROM (SELECT *
			  		FROM movie
			  		<![CDATA[
			  		WHERE openDt > SYSDATE			  		
			  		]]>
			  		ORDER BY openDt DESC) a)
		<![CDATA[
		WHERE rn <= #{movieMaxCnt}
		]]>
	</select>
	
	<!-- 영화 코드로 영화 가져오기 -->
	<select id="getMovie" resultType="movieInfoVO">
		SELECT * FROM movie WHERE movieCd = #{movieCd}
	</select>
	
	
	<!-- 선호하는 배우 등록 여부 -->
	<select id="getLikeActorCount" resultType="int">
		SELECT COUNT(*) FROM userActor WHERE uaid = #{id}
	</select>
	
	<!-- 선호하는 감독 등록 여부 -->
	<select id="getLikeDirectorCount" resultType="int">
		SELECT COUNT(*) FROM userDirector WHERE udid = #{id}
	</select>
	
	<!-- 선호하는 장르 등록 여부 -->
	<select id="getLikeGenreCount" resultType="int">
		SELECT COUNT(*) FROM userGenre WHERE ugid = #{id}
	</select>
	
	
	<!-- 유저가 선호하는 배우들의 코드 가져오기 -->
	<select id="getActorCodeList" resultType="string">
		SELECT ano FROM userActor WHERE uaid = #{id}
	</select>
	
	<!-- 유저가 선호하는 배우 코드로 영화 코드 가져오기 -->
	<select id="getCodeListByActor" resultType="string">
		SELECT mno FROM movieActor WHERE ano = #{ano}
	</select>
	
	<!-- 유저가 선호하는 감독들의 영화 코드 가져오기 -->
	<select id="getDirectorCodeList" resultType="String">
		SELECT dno FROM userDirector WHERE udid = #{id}
	</select>
	
	<!-- 감독의 영화 코드 가져오기 -->
	<select id="getCodeListByDirector" resultType="string">
		SELECT mno FROM movieDirector WHERE dno = #{dno}
	</select>
	
	<!-- 유저가 선호하는 장르 가져오기 -->
	<select id="getGenreCodeList" resultType="string">
		SELECT genre FROM userGenre WHERE ugid = #{id}
	</select>
	
	<!-- 유저가 선호하는 장르로 영화 코드 가져오기 -->
	<select id="getCodeListByGenre" resultType="string">
		SELECT mno FROM movieGenre WHERE genre = #{genre}
	</select>

     <!--  마이페이지에서 프로필사진 업로드-->
     <update id="uploadProfile">
        update users set path=#{path}, fileRealName=#{fileRealName} where userId = #{userId}
     </update>
	
	
	<!-- 영화 제목 검색 -->
	<select id="searchMovie" resultType="movieInfoVO">
		SELECT *
		FROM movie
		WHERE title LIKE '%' || #{keyword} || '%'
		OR ftitle LIKE '%' || #{keyword} || '%'
	</select>
	
	<!-- 사용자 검색기록 가져오기 -->
	<select id="getSearchHistory" resultType="String">
		SELECT keyword
		FROM SearchHistory
		WHERE searchUserId = #{id}
	</select>
	
	<!-- 사용자 검색 횟수 가져오기 -->
	<select id="getSearchCnt" resultType="int">
		SELECT COUNT(*)
		FROM SearchHistory
		WHERE searchUserId = #{id}
	</select>
	
	<!-- 사용자 검색기록 최대 보관 개수 초과시 앞에서부터 수정 -->
	<update id="replaceSearchHistory">
		UPDATE SearchHistory
		SET keyword = #{keyword}
		WHERE searchUserId = #{id}
	</update>
	
	<!-- 사용자 검색기록 추가 -->
	<select id="addSearchHistory">
		INSERT INTO SearchHistory
		VALUES(search_history_seq.NEXTVAL, #{searchUserId}, #{keyword})
	</select>
	
	<!-- 영화 개수 가져오기 -->
	<select id="countMovie" resultType="int">
		SELECT COUNT(*) FROM movie
	</select>
	
	
	
	<!-- 테스트용 코드 -->
	<select id="testActor" resultType="String">
		SELECT ano FROM actor WHERE actorName = #{actorName}
	</select>
	
	<select id="testDirector" resultType="String">
		SELECT dno FROM director WHERE directorName = #{directorName}
	</select>
	
	
</mapper>